video_device: /dev/video0           # Device driver's entrypoint
io_method: mmap                     # I/O method
                                    # - read - for devices supporting virtual filesystem or block I/O
                                    # - mmap - for devices with direct libusb memory mapping
                                    # - userptr - for userspace devices supporting userspace pointer exchange
pixel_format: yuv                  # Pixel format for Video4linux device (also selects decoder mode)
                                    # https://wiki.videolan.org/YUV#YUV_4:2:0_.28I420.2FJ420.2FYV12.29
                                    # - yuyv - YUV420
                                    # - yuv - synonym for yuyv
                                    # - uyvy - UVY240
                                    # - yuvmono10 - Monochrome 10-bit pseudo-YUV
                                    # - rgb24 - Linear 8-bit RGB
                                    # - bgr24 - OpenCV-compatible 8-bit BGR
                                    # - grey - Grayscale 8-bit monochrome
                                    # - yu12 - YU-reversed YUV420
                                    # - mjpeg - FFMPEG decoder, MotionJPEG, for compatible hardware
                                    # - h264 - FFMPEG decoder, H.264, for compatible hardware
color_format: yuv422p               # On-chip color representation mode for the input frame encoded by hardware
                                    # - yuv422p - YUV422 - default, compatible with most MJPEG hardware encoders
                                    # - yuv420p - YUV420 - mandatory for H.264 and H.265 hardware encoders
create_suspended: false             # Instructs the node whether to start streaming immediately after launch
                                    # or to wait until the start service will be triggered
full_ffmpeg_log: false              # Allows to suppress warning messages generated by libavcodec, cleans log
camera_name: head_camera            # ROS internal name for the camera, used to generate camera_info message
camera_frame_id: head_camera        # Frame ID used to generate coordinate transformations
camera_transport_suffix: image_raw  # Suffix used by image_transport to generate topic names
camera_info_url: ""                 # URI for camera calibration data (likely a YML file obtained from camera_calibration)
image_width: 640                    # Frame dimensions, should be supported by camera hardware
image_height: 480
framerate: 30                       # Camera polling frequency, Hz (integer)
                                    # Auxiliary parameters, hardware-dependent, some may not be supported by all cameras
exposure: 100                       # Absolute exposure, percents or hardware-defined coefficient (integer)
brightness: -1                      # Brightness, percents, 0-100, default -1 to ignore (integer)
contrast: -1                        # Contrast, percents, 0-100, default -1 to ignore (integer)
saturation: -1                      # Saturation, percents, 0-100, default -1 to ignore (integer)
sharpness: -1                       # Shapening, hardware-defined unit, default -1 to ignore (integer)
focus: -1                           # Focal distance, hardware-defined unit, default -1 to ignore (integer)
white_balance: 4000                 # Absolute color temperature, K (integer)
gain: -1                            # Gain coefficient, hardware-defined unit, default -1 to ignore (integer)
autofocus: false                    # Toggles auto focusing, once supported by hardware
autoexposure: true                  # Toggles auto exposure, once supported by hardware
auto_white_balance: true            # Toggles auto color temperature adjustment, once supported by hardware
start_service_name: "start_capture" # Defines name suffix for std_srvs::Empty service which restarts suspended streaming
stop_service_name: "stop_capture"   # Defines name suffix for std_srvs::Empty service which suspends camera polling timer

